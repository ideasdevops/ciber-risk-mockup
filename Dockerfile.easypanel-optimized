# ===============================================
# DOCKERFILE PARA LANDING PAGE MARKETING IA
# ===============================================
# Sistema de Deploy Automático - IdeasDevOps
# Landing page con backend para envío de correos
# ===============================================

FROM nginx:alpine

# ===============================================
# CONFIGURACIÓN DE LA APLICACIÓN
# ===============================================
ARG APP_NAME="marketing-ia-landing"
ARG APP_VERSION="1.0.0"
ARG APP_DESCRIPTION="Landing page para el curso de Ventas, Redes Sociales e Inteligencia Artificial"

# ===============================================
# INSTALACIÓN DE DEPENDENCIAS
# ===============================================
RUN apk add --no-cache \
    python3 \
    py3-pip \
    curl \
    bash \
    dumb-init \
    supervisor \
    && rm -rf /var/cache/apk/*

# Instalar dependencias de Python
COPY backend/requirements.txt /tmp/requirements.txt
RUN pip3 install --no-cache-dir -r /tmp/requirements.txt

# ===============================================
# CREACIÓN DE DIRECTORIOS NECESARIOS
# ===============================================
RUN mkdir -p \
    /data/logs/nginx \
    /data/logs/backend \
    /var/cache/nginx \
    /var/run \
    /tmp/nginx \
    /etc/supervisor/conf.d

# ===============================================
# CONFIGURACIÓN DE NGINX OPTIMIZADA
# ===============================================
RUN echo 'server {' > /etc/nginx/conf.d/default.conf && \
    echo '    listen 80 default_server;' >> /etc/nginx/conf.d/default.conf && \
    echo '    listen [::]:80 default_server;' >> /etc/nginx/conf.d/default.conf && \
    echo '    ' >> /etc/nginx/conf.d/default.conf && \
    echo '    root /usr/share/nginx/html;' >> /etc/nginx/conf.d/default.conf && \
    echo '    index index.html index.htm;' >> /etc/nginx/conf.d/default.conf && \
    echo '    ' >> /etc/nginx/conf.d/default.conf && \
    echo '    server_name _;' >> /etc/nginx/conf.d/default.conf && \
    echo '    ' >> /etc/nginx/conf.d/default.conf && \
    echo '    # Configuración de logs' >> /etc/nginx/conf.d/default.conf && \
    echo '    access_log /data/logs/nginx/access.log;' >> /etc/nginx/conf.d/default.conf && \
    echo '    error_log /data/logs/nginx/error.log;' >> /etc/nginx/conf.d/default.conf && \
    echo '    ' >> /etc/nginx/conf.d/default.conf && \
    echo '    # Configuración de archivos estáticos' >> /etc/nginx/conf.d/default.conf && \
    echo '    location / {' >> /etc/nginx/conf.d/default.conf && \
    echo '        try_files $uri $uri/ /index.html;' >> /etc/nginx/conf.d/default.conf && \
    echo '    }' >> /etc/nginx/conf.d/default.conf && \
    echo '    ' >> /etc/nginx/conf.d/default.conf && \
    echo '    # Configuración de caché para assets' >> /etc/nginx/conf.d/default.conf && \
    echo '    location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {' >> /etc/nginx/conf.d/default.conf && \
    echo '        expires 1y;' >> /etc/nginx/conf.d/default.conf && \
    echo '        add_header Cache-Control "public, immutable";' >> /etc/nginx/conf.d/default.conf && \
    echo '    }' >> /etc/nginx/conf.d/default.conf && \
    echo '    ' >> /etc/nginx/conf.d/default.conf && \
    echo '    # Health check endpoint' >> /etc/nginx/conf.d/default.conf && \
    echo '    location /health {' >> /etc/nginx/conf.d/default.conf && \
    echo '        access_log off;' >> /etc/nginx/conf.d/default.conf && \
    echo '        return 200 "healthy\n";' >> /etc/nginx/conf.d/default.conf && \
    echo '        add_header Content-Type text/plain;' >> /etc/nginx/conf.d/default.conf && \
    echo '    }' >> /etc/nginx/conf.d/default.conf && \
    echo '    ' >> /etc/nginx/conf.d/default.conf && \
    echo '    # Configuración de seguridad' >> /etc/nginx/conf.d/default.conf && \
    echo '    add_header X-Frame-Options "SAMEORIGIN" always;' >> /etc/nginx/conf.d/default.conf && \
    echo '    add_header X-Content-Type-Options "nosniff" always;' >> /etc/nginx/conf.d/default.conf && \
    echo '    add_header X-XSS-Protection "1; mode=block" always;' >> /etc/nginx/conf.d/default.conf && \
    echo '}' >> /etc/nginx/conf.d/default.conf

# ===============================================
# COPIA DE ARCHIVOS DE LA LANDING PAGE
# ===============================================
COPY frontend/ /usr/share/nginx/html/

# ===============================================
# SCRIPT DE INICIO OPTIMIZADO
# ===============================================
RUN echo '#!/bin/sh' > /start.sh && \
    echo '' >> /start.sh && \
    echo 'echo "🚀 Iniciando '${APP_NAME}'"' >> /start.sh && \
    echo 'echo "========================================="' >> /start.sh && \
    echo 'echo "Versión: '${APP_VERSION}'"' >> /start.sh && \
    echo 'echo "Descripción: '${APP_DESCRIPTION}'"' >> /start.sh && \
    echo 'echo "🌐 Servidor: nginx"' >> /start.sh && \
    echo 'echo "📁 Directorio: /usr/share/nginx/html"' >> /start.sh && \
    echo '' >> /start.sh && \
    echo '# Crear directorios necesarios' >> /start.sh && \
    echo 'mkdir -p /data/logs/nginx /var/log/nginx /var/cache/nginx /var/run /tmp/nginx' >> /start.sh && \
    echo '' >> /start.sh && \
    echo '# Verificar configuración de nginx' >> /start.sh && \
    echo 'nginx -t' >> /start.sh && \
    echo '' >> /start.sh && \
    echo '# Iniciar nginx' >> /start.sh && \
    echo 'echo "🌐 Iniciando nginx..."' >> /start.sh && \
    echo 'nginx -g "daemon off;"' >> /start.sh

RUN chmod +x /start.sh

# ===============================================
# CONFIGURACIÓN DE PUERTOS Y HEALTHCHECK
# ===============================================
EXPOSE 80

# Healthcheck optimizado para EasyPanel
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost/health || exit 1

# ===============================================
# CONFIGURACIÓN DE PERMISOS
# ===============================================
RUN chown -R nginx:nginx /usr/share/nginx/html && \
    chmod -R 755 /usr/share/nginx/html && \
    chmod +x /start.sh

# ===============================================
# PUNTO DE ENTRADA
# ===============================================
ENTRYPOINT ["dumb-init", "--"]
CMD ["/start.sh"]